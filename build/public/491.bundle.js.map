{"version":3,"sources":["webpack://javascript/./base/generator.js","webpack://javascript/./node_modules/core-js/internals/array-from.js","webpack://javascript/./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack://javascript/./node_modules/core-js/internals/create-property.js","webpack://javascript/./node_modules/core-js/modules/es.array.from.js","webpack://javascript/./node_modules/core-js/modules/es.array.slice.js","webpack://javascript/./node_modules/regenerator-runtime/runtime.js"],"names":["generatorFn","generatorFnYield","nTimes","range","generatorFnIterator","nTimesRec","g","console","log","next","Symbol","iterator","generatorFnYieldObj","n","start","end","Array","from","v","return","bind","toObject","callWithSafeIterationClosing","isArrayIteratorMethod","toLength","createProperty","getIteratorMethod","module","exports","arrayLike","length","result","step","value","O","C","this","argumentsLength","arguments","mapfn","undefined","mapping","iteratorMethod","index","call","done","anObject","iteratorClose","fn","ENTRIES","error","toPrimitive","definePropertyModule","createPropertyDescriptor","object","key","propertyKey","f","$","target","stat","forced","checkCorrectnessOfIteration","iterable","isObject","isArray","toAbsoluteIndex","toIndexedObject","wellKnownSymbol","HAS_SPECIES_SUPPORT","arrayMethodHasSpeciesSupport","SPECIES","nativeSlice","slice","max","Math","proto","Constructor","k","fin","constructor","prototype","runtime","Op","Object","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"491.bundle.js","sourcesContent":["function* generatorFn() {\n\tyield 'foo';\n}\n\nconst g = generatorFn();\nconsole.log(g);\nconsole.log(g.next());\n\nconsole.log(g[Symbol.iterator]);\nconsole.log(g[Symbol.iterator]() === g);\n\n//yield 中断执行generatorFn\nfunction* generatorFnYield() {\n\tyield 'foo';\n\tyield 'bar';\n\treturn 'baz';\n}\n\nlet generatorFnYieldObj = generatorFnYield();\nconsole.log(generatorFnYieldObj.next());\nconsole.log(generatorFnYieldObj.next());\nconsole.log(generatorFnYieldObj.next());\nconsole.log(generatorFnYieldObj);\n\n//迭代器\nfunction* nTimes(n) {\n\twhile(n--) {\n\t\tyield;\n\t}\n}\n\nfor(let n of nTimes(6)) {\n\tconsole.log('foo');\n}\n\nfunction* range(start, end) {\n\twhile(end > start) {\n\t\tyield start++;\n\t}\n}\nconsole.log(Array.from(range(3, 10)));\n\n//产生可迭代对象\nfunction* generatorFnIterator() {\n\tyield*['a', 'b', 'c'];\n}\nfor(var v of generatorFnIterator()) {\n\tconsole.log(v);\n}\n\n//yield*实现递归\nfunction* nTimesRec(n) {\n\tif(n > 0) {\n\t\tyield* nTimesRec(n - 1);\n\t\tyield(n - 1);\n\t}\n}\nfor(const n of nTimesRec(4)) {\n\tconsole.log(n);\n}\n\n//提前终止生成器\nconsole.log(g);\ng.return(4);//g.throw(4)\nconsole.log(g);\n\nexport {\n  nTimesRec\n}\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.es/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    iteratorClose(iterator);\n    throw error;\n  }\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.es/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}